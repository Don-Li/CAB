% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/control.R
\docType{class}
\name{DOR_control-class}
\alias{DOR_control}
\alias{DOR_control-class}
\alias{helper.show.control}
\alias{make.control}
\title{Control objects}
\usage{
helper.show.control(fx, params)

make.control(elemental_objs, parameter_lists)
}
\description{
Objects from the \code{control} class contain objects of a particular type of 'elemental' class as well as their associated parameters. For example, we may have a \code{control} class for \code{DOR} objects. This control class would contain all the \code{DOR} objects that we wish to use in our simulation as well as all of the parameters that we wish to use. The \code{control} class objects are associated with their elemental objects. For example, the \code{control} object for the \code{DOR} class would be a \code{DOR_control} object. Hence, this document details the generic properties of \code{control} classes.
}
\section{Slots}{

\describe{
\item{\code{fx}}{A list of elemental objects of the same type.}

\item{\code{params}}{A list of parameters.}

\item{\code{type}}{Set to 'control'.}
}}
\section{Built-in classes of \code{control} objects}{
{
This is a list of the built-in \code{control} objects.
\describe{
    \item{\code{DOR_control}}{For \code{DOR} objects, \code{\link{class.DOR}}}
    \item{\code{dep_control}}{For \code{dep} objects, \code{\link{class.dep}}}
    \item{\code{emission_control}}{For \code{emission} objects, \code{\link{class.emission}}}
    \item{\code{initial_reserve_control}}{For \code{initial_reserve} objects, \code{\link{class.initial_reserve}}}
    \item{\code{stimulus_control}}{For \code{stimulus} objects, \code{\link{class.stimulus}}}
    \item{\code{termination_control}}{For \code{termination} objects, \code{\link{class.termination}}}
}
}
}

\section{\code{show} methods for the built-in \code{control} objkects}{
{
This is a list of \code{show} methods for the built-in \code{control} objects:
\describe{
    \item{\code{show.DOR_control}}{For \code{DOR} objects, \code{\link{class.DOR}}}
    \item{\code{show.dep_control}}{For \code{dep} objects, \code{\link{class.dep}}}
    \item{\code{show.emission_control}}{For \code{emission} objects, \code{\link{class.emission}}}
    \item{\code{show.initial_reserve_control}}{For \code{initial_reserve} objects, \code{\link{class.initial_reserve}}}
    \item{\code{show.stimulus_control}}{For \code{stimulus} objects, \code{\link{class.stimulus}}}
    \item{\code{show.termination_control}}{For \code{termination} objects, \code{\link{class.termination}}}
}
Each of these methods have a corresponding \code{remove.show.X} function. If a \code{show} method is removed, it may be reinstated with the code above.
}
}

\section{Make a \code{control} object from 'elemental' objects}{
{
To create a \code{control} object from a list of 'elemental' objects:
\enumerate{
    \item Make sure that the type of \code{control} object that you want to make has been defined. If the type of \code{control} object that you wish to make has not been defined, see the following section for how to define a custom type of \code{control} object.
    \item Use the \code{make.control} function
}
\subsection{Usage}{
    \code{make.control( elemental_objs, parameter_lists )}
}
\subsection{Arguments}{
    \describe{
        \item{\code{elemental_objs}}{Either a list of elemental objects of the same class or a single elemental object}
        \item{\code{parameter_lists}}{A list of parameter lists for the function contained in the elemental objects. All parameters must be strings that have been previously specified as \code{input}. The parameter list need not be named. Unnamed parameters are set up in the order that they appear. Alternatively, one may specify which elemental object each parameter list belongs to. See example.
        }
    }
}
\subsection{Value}{
Returns a \code{control} object.
}
}
}
\examples{
#Make some 'DOR' objects:
linear_DOR = make.DOR( DOR_fx = linear_DOR_fx, name = "linear_DOR" )
exponential_DOR = make.DOR( DOR_fx = exponential_DOR_fx, name = "exponential_DOR" )

#Make parameter lists for each 'DOR' object.
#linear_DOR_fx has the parameters: 'max', 'scale', 'resp_times', 'rft_times', 'reserve_value'.
#The parameters 'max' and 'scale' are fixed within each simulation while the other parameters are inputs that change within each simulation. Hence, we put the name of the input that we want to use for these parameters.
linear_DOR_params = list( scale = 100, max = c(1, 0.5), resp_times = "resp_time", rft_times = "rft_time", reserve_value = "reserve" )
#Apply the same logic to the exponential DOR parameters:
#If we do not name the parameters in the list, they are applied in the order that they are specified.
exponential_DOR_params = list( 100, 1, "resp_time", "rft_time", "reserve" )

#Combine the parameter lists:
#If the lists are not named, they are specified in the order that they appear.
DOR_params = list( linear_DOR = linear_DOR_params, exponential_DOR_params )
#Put the DOR objects into a list:
DOR_list = list( linear_DOR, exponential_DOR )

#Make the control object
DOR_ctrl = make.control( DOR_list, DOR_params )
#If we only have one DOR object, we can directly specify them in the make.control() function without putting them inside another list.

#To make a custom control object
#Assume that you already have an elemental class, 'test' and and you want to make a 'test_control' object.
#This will define a 'test_control' class.
test_ctrl = set.custom_control( "test" )
#Then you use "make.control()" as shown above.

}
\seealso{
\code{\link{set.custom_elemental}} For setting up custom elemental classes to make custom control objects.

\code{\link{e_show}} For the show methods.
}

