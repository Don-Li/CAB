% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/analysis_object.R
\docType{class}
\name{analysis_object-class}
\alias{analysis_object-class}
\alias{UOA_analysis_object-class}
\alias{set.custom_analysis_object}
\alias{make.custom_analysis_object}
\alias{simulation_analysis_object-class}
\alias{make.simulation_analysis_object}
\title{\code{CAB} Analysis Objects}
\usage{
set.custom_analysis_object(class_name, slot_names)

make.custom_analysis_object(analysis_obj_class, ...)

make.simulation_analysis_object(meta_data, input, dims,
  data = data.frame(NULL))
}
\description{
\code{analysis_object} are objects for data analysis.
}
\details{
In the \code{CAB} package, data is typically stored in an \code{analysis_object} of which there are multiple child classes. \code{analysis_object}s are created by running a simulation or by importing some experimental data.

The parent class \code{analysis_object} does not really do anything. The real work is done by other classes that inherit from \code{analysis_object}.
}
\section{Slots}{

\describe{
\item{\code{analysis_object}}{A \code{data.frame} that contains the data.}

\item{\code{meta_data}}{A \code{list} that contains the information about the experiment or simulation.}
}}

\section{{\code{UOA_analysis_object}}}{
{
The \code{UOA_analysis_object} class is made specially for the MED-PC files used at the University of Auckland.
    \subsection{Slots}{
        \describe{
            \item{\code{variable_arrays}}{A list that stores arrays that contains variable information, such as the number of responses or the number of reinforcement (i.e., a "C"-array).}
            \item{\code{general_arrays}}{A list that stores arrays that contain general information, such as the arranged inter-reinforcement intervals.}
            \item{\code{meta_data}}{Inerited from \code{analysis_object}. A \code{data.frame} that contains the metadata for the experiment.}
            \item{\code{analysis_object}}{Inherited from \code{analysis_object}. A \code{data.frame} that contains the events and the times. This will be some post-processed "X"-array.}
        }
    }
}
}

\section{{\code{Custom analysis object}}}{
{
If the user wishes to make their own \code{analysis_object} class, the \code{set.custom_analysis_object()} function can be used to set up the class.

To create an object of the newly set up \code{analysis_object} class, the \code{make.custom_analysis_object()} function can be used. In general, once a custom \code{analysis_object} class is defined, other functions, such as those that read in the data, will construct objects of the custom \code{analysis_object} class. Hence, the user will rarely have to use the \code{make.custom_analysis_object()} function directly.
    \subsection{Usage}{
        \code{set.custom_analysis_object( class_name, slot_names )}
    }
    \subsection{Mandatory slots}{
        \describe{
            \item{\code{analysis_object}}{Inherited from \code{analysis_object}.}
            \item{\code{meta_data}}{Inherited from \code{meta_data}.}
        }
    }
    \subsection{Arguments}{
        \describe{
            \item{\code{class_name}}{A character string giving the name of the custom \code{analysis_object} class.}
            \item{\code{slot_names}}{Either: 1) an unnamed list of slot names or 2) a named list, with the names specifying the slot names and the elements specifying the class of object contained in the slot. If 1), all slots will contain \code{list}. See example.}
        }
    }
    \subsection{Usage}{
        \code{make.custom_analysis_object( analysis_obj_class, ... )}
    }
    \subsection{Arguments}{
        \describe{
            \item{\code{analysis_object_class}}{A character string specifying the name of the custom \code{analysis_object} class.}
            \item{\code{...}}{A named set of arguments that fills up the object. The arguments should be named as the slot name to which the argument pertains to. See example.}
        }
    }
}
}

\section{{Analysis objects from simulations}}{
{
By default, simulations will store the data in a \code{simulation_analysis_object} object.
    \subsection{Usage}{
        \code{make.simulation_analysis_object( class_name, slot_names )}
    }
    \subsection{Slots}{
        \describe{
            \item{\code{analysis_object}}{Inherited from \code{analysis_object}. Defaults to \code{data.frame(NULL)} so that only the \code{input} slot contains simulation data.}
            \item{\code{meta_data}}{Inherited from \code{analysis_object}.}
            \item{\code{input}}{Inherited from \code{sim_input}.}
        }
    }
}
}

\examples{
# Make a custom "analysis_object"
# With an unnamed list:
set.custom_analysis_object( class_name = "test_analysis", slot_names = list( "slot1", "slot2" ) )
# The "slot_names" is an unnamed list, so "slot1" and "slot2" will only hold "list".
make.custom_analysis_object( analysis_object_class = "test_analysis", slot1 = list(1), slot2 = list(2) )

# With a named list:
set.custom_analysis_object( class_name = "test_analysis", slot_names = list( slot1 = "data.frame", slot2 = "character" ) )
# The "slot_names" is a named list, with elements "data.frame" and "character". So, "slot1" will hold "data.frame" and "slot2" will hold "character".
make.custom_analysis_object( "test_analysis", slot1 = data.frame(1), slot2 = "a" )

}
