% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/elemental_get_helpers.R
\name{e_get.name}
\alias{e_get.fx}
\alias{e_get.name}
\alias{get.IRI_resp_times}
\alias{get.reserve}
\alias{get.resps}
\alias{get.time}
\title{Elemental accessor helper functions}
\usage{
e_get.name(elementary_obj)

e_get.fx(elementary_obj)

get.reserve(reserve_input)

get.resps(resp_input)

get.time(time_input)

get.IRI_resp_times(iri_resp_times)
}
\description{
An accessor function is a function that retrieves variables from an object. Because most of the \code{CAB} package is programmed in an object-oriented style, accessor functions are used in almost every part of the package. Hence, these accessor functions will be documented here.
}
\details{
\describe{
    \item{\code{e_get.name}}{Get the name that was assigned to the elemental object.}
    \item{\code{e_get.fx}}{Get the elemental function contained in the elemental object.}
    \item{\code{get.reserve( reserve_input )}}{Takes a list in the \code{input} object that tracks the reserve value and returns the most recently changed reserve value. Otherwise, takes a numeric.}
    \item{\code{get.resps( resp_input )}}{Takes the vector \code{resp_input} and returns the number of elements that are not \code{NAN}.}
    \item{\code{get.time( time_input )}}{Takes the vector \code{time_input} and returns a last value that is not \code{NAN}. If all values are \code{NAN}, returns 0.}
    \item{\code{get.IRI_responses( resp_times, rft_times )}}{Takes a list in the \code{input} object that tracks the response times within an inter-reinforcement interval. Otherwise, takes a numeric.}
    \item{\code{bin2int}}{Takes a matrix of binary strings with each column corresponding to each string and the rows corresponding to the digits of each binary string.}
    \item{\code{int2bin}}{Takes a vector of integers with an argument \code{digits} and converts each integer into a corresponding binary string with length of \code{digits}.}
}
}
\seealso{
\code{\link{class.input}} Many of the arguments for the helper functions come from an object of \code{input}.
}

